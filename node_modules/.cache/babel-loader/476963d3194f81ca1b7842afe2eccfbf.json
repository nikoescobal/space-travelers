{"ast":null,"code":"import { JOIN_MISSION, LOAD_MISSIONS, LEAVE_MISSION } from '../../types';\nexport const URL = 'https://api.spacexdata.com/v3/missions';\nexport const joinMission = id => ({\n  type: JOIN_MISSION,\n  payload: id\n});\nexport const loadMissions = id => ({\n  type: LOAD_MISSIONS,\n  payload: id\n});\nexport const leaveMission = payload => ({\n  type: LEAVE_MISSION,\n  payload\n});\nexport const fetchAllMissions = async () => {\n  const response = await fetch(URL);\n  return response.json();\n};\nexport const missionsSelector = state => state.missions;\nexport const getMissions = () => async function getMissions(dispatch) {\n  const allMissions = await fetchAllMissions();\n  const missions = allMissions.map(mission => ({\n    id: mission.mission_id,\n    missionName: mission.mission_name,\n    description: mission.description,\n    wikipedia: mission.details\n  }));\n  dispatch(loadMissions(missions));\n};\nexport const newStateToLeaveMission = (missions, id) => {\n  const newState = missions.map(mission => {\n    if (mission.mission_id !== id) {\n      return mission;\n    }\n\n    return { ...mission,\n      isReserved: false\n    };\n  });\n  return newState;\n};\nexport default getMissions;","map":{"version":3,"sources":["/home/codepriest/Documents/microverse/space-travelers/src/store/reducers/actions/missionActions.js"],"names":["JOIN_MISSION","LOAD_MISSIONS","LEAVE_MISSION","URL","joinMission","id","type","payload","loadMissions","leaveMission","fetchAllMissions","response","fetch","json","missionsSelector","state","missions","getMissions","dispatch","allMissions","map","mission","mission_id","missionName","mission_name","description","wikipedia","details","newStateToLeaveMission","newState","isReserved"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,aAAtC,QAA2D,aAA3D;AAEA,OAAO,MAAMC,GAAG,GAAG,wCAAZ;AACP,OAAO,MAAMC,WAAW,GAAIC,EAAD,KAAS;AAChCC,EAAAA,IAAI,EAAEN,YAD0B;AAEhCO,EAAAA,OAAO,EAAEF;AAFuB,CAAT,CAApB;AAKP,OAAO,MAAMG,YAAY,GAAIH,EAAD,KAAS;AACjCC,EAAAA,IAAI,EAAEL,aAD2B;AAEjCM,EAAAA,OAAO,EAAEF;AAFwB,CAAT,CAArB;AAKP,OAAO,MAAMI,YAAY,GAAIF,OAAD,KAAc;AACtCD,EAAAA,IAAI,EAAEJ,aADgC;AAEtCK,EAAAA;AAFsC,CAAd,CAArB;AAKP,OAAO,MAAMG,gBAAgB,GAAG,YAAW;AACvC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,CAA5B;AACA,SAAOQ,QAAQ,CAACE,IAAT,EAAP;AACH,CAHM;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAWA,KAAK,CAACC,QAA1C;AAEP,OAAO,MAAMC,WAAW,GAAG,MAAM,eAAeA,WAAf,CAA2BC,QAA3B,EAAqC;AAClE,QAAMC,WAAW,GAAG,MAAMT,gBAAgB,EAA1C;AACA,QAAMM,QAAQ,GAAGG,WAAW,CAACC,GAAZ,CAAiBC,OAAD,KAAc;AAC3ChB,IAAAA,EAAE,EAAEgB,OAAO,CAACC,UAD+B;AAE3CC,IAAAA,WAAW,EAAEF,OAAO,CAACG,YAFsB;AAG3CC,IAAAA,WAAW,EAAEJ,OAAO,CAACI,WAHsB;AAI3CC,IAAAA,SAAS,EAAEL,OAAO,CAACM;AAJwB,GAAd,CAAhB,CAAjB;AAMAT,EAAAA,QAAQ,CAACV,YAAY,CAACQ,QAAD,CAAb,CAAR;AACH,CATM;AAUP,OAAO,MAAMY,sBAAsB,GAAG,CAACZ,QAAD,EAAWX,EAAX,KAAkB;AACpD,QAAMwB,QAAQ,GAAGb,QAAQ,CAACI,GAAT,CAAcC,OAAD,IAAa;AACvC,QAAIA,OAAO,CAACC,UAAR,KAAuBjB,EAA3B,EAA+B;AAC3B,aAAOgB,OAAP;AACH;;AACD,WAAO,EAAC,GAAGA,OAAJ;AAAaS,MAAAA,UAAU,EAAE;AAAzB,KAAP;AACH,GALgB,CAAjB;AAMA,SAAOD,QAAP;AACH,CARM;AAUP,eAAeZ,WAAf","sourcesContent":["import { JOIN_MISSION, LOAD_MISSIONS, LEAVE_MISSION } from '../../types';\n\nexport const URL = 'https://api.spacexdata.com/v3/missions';\nexport const joinMission = (id) => ({\n    type: JOIN_MISSION,\n    payload: id,\n});\n\nexport const loadMissions = (id) => ({\n    type: LOAD_MISSIONS,\n    payload: id,\n});\n\nexport const leaveMission = (payload) => ({\n    type: LEAVE_MISSION,\n    payload,\n});\n\nexport const fetchAllMissions = async() => {\n    const response = await fetch(URL);\n    return response.json();\n};\n\nexport const missionsSelector = (state) => state.missions;\n\nexport const getMissions = () => async function getMissions(dispatch) {\n    const allMissions = await fetchAllMissions();\n    const missions = allMissions.map((mission) => ({\n        id: mission.mission_id,\n        missionName: mission.mission_name,\n        description: mission.description,\n        wikipedia: mission.details,\n    }));\n    dispatch(loadMissions(missions));\n};\nexport const newStateToLeaveMission = (missions, id) => {\n    const newState = missions.map((mission) => {\n        if (mission.mission_id !== id) {\n            return mission;\n        }\n        return {...mission, isReserved: false };\n    });\n    return newState;\n};\n\nexport default getMissions;"]},"metadata":{},"sourceType":"module"}