{"ast":null,"code":"// import * as types from '../types';\nconst initialState = {};\n\nconst tempReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //   case types.typeName:\n    //     return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default tempReducer;","map":{"version":3,"sources":["/home/codepriest/Documents/microverse/space-travelers/src/store/reducers/tempReducer.js"],"names":["initialState","tempReducer","state","action","type"],"mappings":"AAAA;AAEA,MAAMA,YAAY,GAAG,EAArB;;AAEA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA;AACA;AACE,aAAOF,KAAP;AAJJ;AAMD,CAPD;;AASA,eAAeD,WAAf","sourcesContent":["// import * as types from '../types';\n\nconst initialState = {};\n\nconst tempReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //   case types.typeName:\n    //     return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default tempReducer;\n"]},"metadata":{},"sourceType":"module"}