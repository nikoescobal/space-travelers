{"ast":null,"code":"import { combineReducers, applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rocketsReducer from './reducers/rocketReducer';\nimport dragonReducer from './reducers/dragonReducer';\nimport missionReducer from './reducers/missionReducer';\nconst reducers = combineReducers({\n  rockets: rocketsReducer,\n  dragons: dragonReducer,\n  missions: missionReducer\n});\nconst middlwares = [thunk, logger];\nconst configureStore = createStore(reducers, composeWithDevTools(applyMiddleware(...middlwares)));\nexport default configureStore;","map":{"version":3,"sources":["/home/codepriest/Documents/microverse/space-travelers/src/store/configureStore.js"],"names":["combineReducers","applyMiddleware","createStore","thunk","logger","composeWithDevTools","rocketsReducer","dragonReducer","missionReducer","reducers","rockets","dragons","missions","middlwares","configureStore"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,MAAMC,QAAQ,GAAGT,eAAe,CAAC;AAC/BU,EAAAA,OAAO,EAAEJ,cADsB;AAE/BK,EAAAA,OAAO,EAAEJ,aAFsB;AAG/BK,EAAAA,QAAQ,EAAEJ;AAHqB,CAAD,CAAhC;AAMA,MAAMK,UAAU,GAAG,CAACV,KAAD,EAAQC,MAAR,CAAnB;AAEA,MAAMU,cAAc,GAAGZ,WAAW,CAChCO,QADgC,EAEhCJ,mBAAmB,CAACJ,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAFa,CAAlC;AAKA,eAAeC,cAAf","sourcesContent":["import { combineReducers, applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rocketsReducer from './reducers/rocketReducer';\nimport dragonReducer from './reducers/dragonReducer';\nimport missionReducer from './reducers/missionReducer';\n\nconst reducers = combineReducers({\n  rockets: rocketsReducer,\n  dragons: dragonReducer,\n  missions: missionReducer,\n});\n\nconst middlwares = [thunk, logger];\n\nconst configureStore = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(...middlwares)),\n);\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}