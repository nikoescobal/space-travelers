{"ast":null,"code":"/* eslint-disable no-case-declarations */\nimport { LOAD_DRAGONS, LOAD_FAILED, initialState, RESERVE_DRAGONS, CANCEL_RESERVATION } from \"../types\";\n\nconst dragonReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_DRAGONS:\n      return { ...state,\n        dragons: action.payload\n      };\n\n    case LOAD_FAILED:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case RESERVE_DRAGONS:\n      const newState = state.dragons.map(item => {\n        if (item.id === action.payload) {\n          return { ...item,\n            reserved: !item.reserved\n          };\n        }\n\n        return item;\n      });\n      return { ...state,\n        dragons: newState\n      };\n\n    case CANCEL_RESERVATION:\n      const newStateb = state.dragons.map(item => {\n        if (item.id === action.payload) {\n          return { ...item,\n            reserved: !item.reserved\n          };\n        }\n\n        return item;\n      });\n      return { ...state,\n        dragons: newStateb\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dragonReducer;","map":{"version":3,"sources":["/home/codepriest/Documents/microverse/space-travelers/src/store/reducers/dragonReducer.js"],"names":["LOAD_DRAGONS","LOAD_FAILED","initialState","RESERVE_DRAGONS","CANCEL_RESERVATION","dragonReducer","state","action","type","dragons","payload","loading","error","newState","map","item","id","reserved","newStateb"],"mappings":"AAAA;AAEA,SACEA,YADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,eAJF,EAKEC,kBALF,QAMO,UANP;;AAQA,MAAMC,aAAa,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELK,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEL,MAAM,CAACG;AAHT,OAAP;;AAKF,SAAKP,eAAL;AACE,YAAMU,QAAQ,GAAGP,KAAK,CAACG,OAAN,CAAcK,GAAd,CAAmBC,IAAD,IAAU;AAC3C,YAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACG,OAAvB,EAAgC;AAC9B,iBAAO,EAAE,GAAGK,IAAL;AAAWE,YAAAA,QAAQ,EAAE,CAACF,IAAI,CAACE;AAA3B,WAAP;AACD;;AACD,eAAOF,IAAP;AACD,OALgB,CAAjB;AAMA,aAAO,EAAE,GAAGT,KAAL;AAAYG,QAAAA,OAAO,EAAEI;AAArB,OAAP;;AACF,SAAKT,kBAAL;AACE,YAAMc,SAAS,GAAGZ,KAAK,CAACG,OAAN,CAAcK,GAAd,CAAmBC,IAAD,IAAU;AAC5C,YAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACG,OAAvB,EAAgC;AAC9B,iBAAO,EAAE,GAAGK,IAAL;AAAWE,YAAAA,QAAQ,EAAE,CAACF,IAAI,CAACE;AAA3B,WAAP;AACD;;AACD,eAAOF,IAAP;AACD,OALiB,CAAlB;AAMA,aAAO,EAAE,GAAGT,KAAL;AAAYG,QAAAA,OAAO,EAAES;AAArB,OAAP;;AAEF;AACE,aAAOZ,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,eAAeD,aAAf","sourcesContent":["/* eslint-disable no-case-declarations */\n\nimport {\n  LOAD_DRAGONS,\n  LOAD_FAILED,\n  initialState,\n  RESERVE_DRAGONS,\n  CANCEL_RESERVATION,\n} from \"../types\";\n\nconst dragonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_DRAGONS:\n      return {\n        ...state,\n        dragons: action.payload,\n      };\n    case LOAD_FAILED:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case RESERVE_DRAGONS:\n      const newState = state.dragons.map((item) => {\n        if (item.id === action.payload) {\n          return { ...item, reserved: !item.reserved };\n        }\n        return item;\n      });\n      return { ...state, dragons: newState };\n    case CANCEL_RESERVATION:\n      const newStateb = state.dragons.map((item) => {\n        if (item.id === action.payload) {\n          return { ...item, reserved: !item.reserved };\n        }\n        return item;\n      });\n      return { ...state, dragons: newStateb };\n\n    default:\n      return state;\n  }\n};\n\nexport default dragonReducer;\n"]},"metadata":{},"sourceType":"module"}