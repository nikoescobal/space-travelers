{"ast":null,"code":"import { url, LOAD_DRAGONS, RESERVE_DRAGONS, CANCEL_RESERVATION, LOAD_FAILED } from '../../types';\n\nconst loadDragons = dragons => ({\n  type: LOAD_DRAGONS,\n  payload: dragons\n});\n\nexport const reserveDragons = id => ({\n  type: RESERVE_DRAGONS,\n  payload: id\n});\nexport const cancelReservation = id => ({\n  type: CANCEL_RESERVATION,\n  payload: id\n});\n\nconst loadFailed = err => ({\n  type: LOAD_FAILED,\n  payload: err\n});\n\nexport const fetchData = () => async dispatch => {\n  try {\n    const response = await fetch(url);\n    const dragons = await response.json();\n    dispatch(loadDragons(dragons.map(dragon => {\n      const {\n        id,\n        name,\n        type,\n        flickr_images: images\n      } = dragon;\n      return {\n        id,\n        name,\n        type,\n        images\n      };\n    })));\n  } catch (err) {\n    err.description = 'An error occurred. Please try again later.';\n    dispatch(loadFailed(err.description));\n  }\n};","map":{"version":3,"sources":["/Users/niko/Desktop/Microverse/space-travelers/src/store/reducers/actions/dragonActions.js"],"names":["url","LOAD_DRAGONS","RESERVE_DRAGONS","CANCEL_RESERVATION","LOAD_FAILED","loadDragons","dragons","type","payload","reserveDragons","id","cancelReservation","loadFailed","err","fetchData","dispatch","response","fetch","json","map","dragon","name","flickr_images","images","description"],"mappings":"AAAA,SACEA,GADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,WALF,QAMO,aANP;;AAQA,MAAMC,WAAW,GAAIC,OAAD,KAAc;AAChCC,EAAAA,IAAI,EAAEN,YAD0B;AAEhCO,EAAAA,OAAO,EAAEF;AAFuB,CAAd,CAApB;;AAKA,OAAO,MAAMG,cAAc,GAAIC,EAAD,KAAS;AACrCH,EAAAA,IAAI,EAAEL,eAD+B;AAErCM,EAAAA,OAAO,EAAEE;AAF4B,CAAT,CAAvB;AAKP,OAAO,MAAMC,iBAAiB,GAAID,EAAD,KAAS;AACxCH,EAAAA,IAAI,EAAEJ,kBADkC;AAExCK,EAAAA,OAAO,EAAEE;AAF+B,CAAT,CAA1B;;AAKP,MAAME,UAAU,GAAIC,GAAD,KAAU;AAC3BN,EAAAA,IAAI,EAAEH,WADqB;AAE3BI,EAAAA,OAAO,EAAEK;AAFkB,CAAV,CAAnB;;AAKA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACjB,GAAD,CAA5B;AACA,UAAMM,OAAO,GAAG,MAAMU,QAAQ,CAACE,IAAT,EAAtB;AAEAH,IAAAA,QAAQ,CACNV,WAAW,CACTC,OAAO,CAACa,GAAR,CAAaC,MAAD,IAAY;AACtB,YAAM;AACJV,QAAAA,EADI;AACAW,QAAAA,IADA;AACMd,QAAAA,IADN;AACYe,QAAAA,aAAa,EAAEC;AAD3B,UAEFH,MAFJ;AAGA,aAAO;AACLV,QAAAA,EADK;AAELW,QAAAA,IAFK;AAGLd,QAAAA,IAHK;AAILgB,QAAAA;AAJK,OAAP;AAMD,KAVD,CADS,CADL,CAAR;AAeD,GAnBD,CAmBE,OAAOV,GAAP,EAAY;AACZA,IAAAA,GAAG,CAACW,WAAJ,GAAkB,4CAAlB;AACAT,IAAAA,QAAQ,CAACH,UAAU,CAACC,GAAG,CAACW,WAAL,CAAX,CAAR;AACD;AACF,CAxBM","sourcesContent":["import {\n  url,\n  LOAD_DRAGONS,\n  RESERVE_DRAGONS,\n  CANCEL_RESERVATION,\n  LOAD_FAILED,\n} from '../../types';\n\nconst loadDragons = (dragons) => ({\n  type: LOAD_DRAGONS,\n  payload: dragons,\n});\n\nexport const reserveDragons = (id) => ({\n  type: RESERVE_DRAGONS,\n  payload: id,\n});\n\nexport const cancelReservation = (id) => ({\n  type: CANCEL_RESERVATION,\n  payload: id,\n});\n\nconst loadFailed = (err) => ({\n  type: LOAD_FAILED,\n  payload: err,\n});\n\nexport const fetchData = () => async (dispatch) => {\n  try {\n    const response = await fetch(url);\n    const dragons = await response.json();\n\n    dispatch(\n      loadDragons(\n        dragons.map((dragon) => {\n          const {\n            id, name, type, flickr_images: images,\n          } = dragon;\n          return {\n            id,\n            name,\n            type,\n            images,\n          };\n        }),\n      ),\n    );\n  } catch (err) {\n    err.description = 'An error occurred. Please try again later.';\n    dispatch(loadFailed(err.description));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}